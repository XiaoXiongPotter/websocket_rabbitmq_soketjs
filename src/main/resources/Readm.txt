1、配置rabbitmq与websoket集合的文档可以参考https://juejin.im/post/5ac8d30151882548fe4a6143
或者查看复制下来的文档，rabbitmq_wesocket文档，github地址：
https://github.com/hryou0922/spring_boot/tree/v0.19/mvc/src/main/java/com/hry/spring/mvc/websocket/rabbitmq
2、声明rabbitmq队列交换机（RabbitTopic.java）
3、修改WebSocketsConfig.java中public void configureMessageBroker(MessageBrokerRegistry config)，
注释掉config.enableSimpleBroker(props.getTopic());让rabbitmq替代simpleBroker做消息代理，
增加 public void configureMessageBroker(MessageBrokerRegistry registry) {
        /**
         * 配置消息代理
         * 使用RabbitMQ做为消息代理，替换默认的Simple Broker
         */
	registry
		// "STOMP broker relay"处理所有消息将消息发送到外部的消息代理
                .enableStompBrokerRelay("/exchange","/topic","/queue","/amq/queue")
                .setRelayHost("1localhost")
                .setClientLogin("guest")
                .setClientPasscode("guest")
                .setSystemLogin("guest")
                .setSystemPasscode("guest")
                .setSystemHeartbeatSendInterval(5000)
                .setSystemHeartbeatReceiveInterval(4000);
                ;
}
此处为rabbitmq的配置，其中.enableStompBrokerRelay("/exchange","/topic","/queue","/amq/queue")为固定允许的broker
4、修改SimpleController.java中controller，原来websocket的方法会报错，因为sendTo中只能匹配上述四个，根据其规则匹配，前端订阅的地址即为@sendTo的地址


匹配方法：
   1、 /exchange/exchangename/[routing_key]
   通过交换机订阅/发布消息，交换机需要手动创建，参数说明
a. /exchange：固定值
b. exchangename：交换机名称
c. [routing_key]：路由键，可选
对于接收者端，该 destination 会创建一个唯一的、自动删除的随机queue， 并根据 routing_key将该 queue 绑定到所给的 exchangename，实现对该队列的消息订阅。
对于发送者端，消息就会被发送到定义的 exchangename中，并且指定了  routing_key。
    2、/queue/queuename
    使用默认交换机订阅/发布消息，默认由stomp自动创建一个持久化队列，参数说明
a. /queue：固定值
b. queuename：自动创建一个持久化队列
对于接收者端，订阅队列queuename的消息
对于接收者端，向queuename发送消息
[对于 SEND frame，destination 只会在第一次发送消息的时候会定义的共享 queue]
    3、 /amq/queue/queuename
    和上文的"/queue/queuename"相似，两者的区别是 a. 与/queue/queuename的区别在于队列不由stomp自动进行创建，队列不存在失败

这种情况下无论是发送者还是接收者都不会产生队列。 但如果该队列不存在，接收者会报错。
    4、/topic/routing_key
    通过amq.topic交换机订阅/发布消息，订阅时默认创建一个临时队列，通过routing_key与topic进行绑定
a. /topic：固定前缀
b. routing_key：路由键
对于发送者端，会创建出自动删除的、非持久的队列并根据 routing_key路由键绑定到 amq.topic 交换机 上，同时实现对该队列的订阅。
对于发送者端，消息会被发送到 amq.topic 交换机中。
